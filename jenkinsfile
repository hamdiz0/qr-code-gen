def gs

pipeline{
    agent any

    environment {
        VERSION = "1.0.$BUILD_NUMBER"
        KUBECONFIG = "/kubecfg/eks-cfg"
    }

    stages{
        stage("load script"){
            steps{
                script{
                    gs = load "script.groovy"
                }
            }
        }
        stage("build images"){
            steps{
                script{
                    ImageName_DockerFileLocation = [
                        ['qr-front','./front'],
                        ['qr-api','./api'],
                    ] 
                    gs.build(
                        'hamdiz0',                              // repo url
                        env.VERSION,                            // Version
                        'docker-repo',                          // Credentail Id for docker repo from jenkins 
                        ImageName_DockerFileLocation            // List of pairs (Image Name along with Docker File Location)
                    )
                }
            }
        }
        stage("push images"){
            steps{
                script{
                    ImageNames=['qr-front','qr-api']
                    gs.push(
                        'hamdiz0',                              // repo url
                        env.VERSION,                            // Version
                        'docker-repo',                          // Credentail Id for docker repo from jenkins 
                        ImageNames                              // List of Image Names
                    )
                }
            }
        }
        stage("update version"){
            steps {
                sh """
                    cd k8s-manifests
                    chmod +x change_version.sh
                    ./change_version.sh -v $VERSION
                """
            }
        }
        stage("deploy"){
            steps {
                script {
                    sh """
                        export KUBECONFIG=$KUBECONFIG
                        cd k8s-manifests
                        chmod +x deploy.sh
                        ./deploy.sh
                    """
                }
            }
        }
        stage("push changes"){
            steps {
                script {
                    gs.git_push(
                        'github.com/hamdiz0/qr-code-generator',     //url without "https://"
                        'github-api-token',                         //credentialsId
                        "updated to version ${VERSION}",            //commit message
                        'main'                                      //branch
                    )
                }
            }
        }
    }
}
